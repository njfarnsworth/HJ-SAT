Generating combinatorial lines and boolean literals for 2 = HJ(3,2)
Chunk 0 has 1 lines:
[[1, 1], [1, 2], [1, 3]]


Chunk 1 has 2 lines
[[2, 1], [2, 2], [2, 3]]
[[3, 1], [3, 2], [3, 3]]


Chunk 2 has 2 lines
[[1, 1], [2, 1], [3, 1]]
[[1, 2], [2, 2], [3, 2]]


Chunk 3 has 2 lines
[[1, 3], [2, 3], [3, 3]]
[[1, 1], [2, 2], [3, 3]]



Chunk 0: Performing symmetry blocking on x_1
Chunk 0 literals before map:  {1, 2, 3}
Chunk 0 literals after map:  {1: 1, 2: 2, 3: 3}
Found 3 solutions in chunk 0


Chunk 1 literals before map:  {4, 5, 6, 7, 8, 9}
Chunk 1 literals after map:  {4: 1, 5: 2, 6: 3, 7: 4, 8: 5, 9: 6}
Found 36 solutions in chunk 1


Chunk 2: Performing symmetry blocking on x_1
Chunk 2 literals before map:  {1, 2, 4, 5, 7, 8}
Chunk 2 literals after map:  {1: 1, 2: 2, 4: 3, 5: 4, 7: 5, 8: 6}
Found 18 solutions in chunk 2


Chunk 3: Performing symmetry blocking on x_1
Chunk 3 literals before map:  {1, 3, 5, 6, 9}
Chunk 3 literals after map:  {1: 1, 3: 2, 5: 3, 6: 4, 9: 5}
Found 9 solutions in chunk 3


Fixing the literals across the single solution sets, we learn:
Chunk 0 fixes [1]
Chunk 1 fixes []
Chunk 2 fixes [1]
Chunk 3 fixes [1]


Intersection of chunk 1 and chunk 2 = {8, 4, 5, 7}
Intersection size: 4
Checking for -8 across solutions
[4, 5, -6, 7, 8, -9] exists and breaks the pattern 

Checking for 4 across solutions
[-4, 5, -6, 7, -8, 9] exists and breaks the pattern 

Checking for -5 across solutions
[4, 5, -6, 7, -8, -9] exists and breaks the pattern 

Checking for 7 across solutions
[4, -5, -6, -7, -8, 9] exists and breaks the pattern 




Intersection of chunk 1 and chunk 3 = {9, 5, 6}
Intersection size: 3
Checking for -9 across solutions
[4, 5, -6, 7, -8, 9] exists and breaks the pattern 

Checking for -5 across solutions
[4, 5, -6, 7, -8, -9] exists and breaks the pattern 

Checking for -6 across solutions
[-4, 5, 6, -7, -8, 9] exists and breaks the pattern 




Intersection of chunk 0 and chunk 2 = {1, 2}
Intersection size: 2
Checking for 1 across solutions
Checking for -2 across solutions
[1, 2, -3] exists and breaks the pattern 




Intersection of chunk 0 and chunk 3 = {1, 3}
Intersection size: 2
Checking for 1 across solutions
Checking for -3 across solutions
[1, -2, 3] exists and breaks the pattern 




Intersection of chunk 2 and chunk 3 = {1, 5}
Intersection size: 2
Checking for 1 across solutions
Checking for -5 across solutions
[1, 2, -4, 5, -7, -8] exists and breaks the pattern 




Intersection of chunk 0 and chunk 1 = set()
Intersection size: 0



Through the intersection method, we fix the following boolean literals: [[], [], [1], [1], [1], []]
